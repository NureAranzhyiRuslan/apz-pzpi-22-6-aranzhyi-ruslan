МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ




Лабораторна робота №4


з дисципліни
«Архітектура програмного забезпечення»











Харків 2025
1 ІСТОРІЯ ЗМІН
Зміни звіту наведені у таблиці 1.1.
Таблиця 1.1 - Історія змін
№	Дата	Версія звіту	Опис змін
1	10.05.2025	0.1	Створено розділ “Історія змін”
2	10.05.2025	0.1	Створено розділ “Завдання”
3	10.05.2025	0.1	Створено розділ “Опис виконаної роботи”
4	10.05.2025	0.1	Створено розділ “Висновки”
5	10.05.2025	0.1	Доданий Додаток А
6	10.05.2025	0.1	Доданий Додаток Б


2 ЗАВДАННЯ
Необхідно розробити мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.
Проаналізуйте завдання.
Виконайте контрольні завдання.
Відкрийте створений на попередній лабораторній роботі репозиторій GitHub.
Створіть у репозиторії директорію Task5 та текстовий файл з описом інженерних рішень у цій частині проєкту, як вказано у додатку З
Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті.
Створіть у директорії Task5 піддиректорію для програмного коду, як вказано у додатку З
Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторій зміни
Виконайте функціональне тестування створеного програмного коду та створіть відеозапис цього тестування тривалістю 7..10 хвилин з усними поясненнями процесу тестування
Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua
Створіть для завантаженого запису його хронологічний опис.
Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/
У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube.


3 ОПИС ВИКОНАНОЇ РОБОТИ
Програмне забезпечення мобільний програмний застосунок для платформи Android розроблено на мові програмування Kotlin та з використанням фреймворку Jetpack Compose, бібліотек Retrofit2 для api запитів, Jackson для роботи з Json. Програмне забезпечення отримує користувацькі пристрої, їх вимірювання та прогнози погоди з серверу. Автентифікація реалізована за допомогою JWT-токенів, які перевіряються а сервері при кожному запиті.
На рисунку Б.1 у додатку Б наведена UML діаграма прецедентів.
На рисунку Б.2 у додатку Б наведена діаграма компонентів.
На рисунку Б.3 у додатку Б наведена діаграма взаємодії.
На рисунку Б.4 у додатку Б наведена діаграма станів.


4 ВИСНОВКИ
Під час виконання лабораторної роботи було розроблено мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.


Додаток А
Посилання на відео та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/hRpOupzieLQ
Хронологічний опис доповіді:
00:00 Вступ
00:11 Реєстрація
00:22 Прогноз погоди
00:26 Зміна міста прогнозу погоди
00:42 Авторизація
00:53 Створення нового пристрою
01:09 Редагування пристрою
01:31 Відправка даних на сервер
01:42 Перегляд даних пристрою
02:24 Видалення пристрою


Додаток Б
Графічні матеріали


Рисунок Б.1 - UML діаграма прецедентів


Рисунок Б.2 - Діаграма компонентів


Рисунок Б.3 - Діаграма взаємодії


Рисунок Б.4 - Діаграма станів


Додаток В
Програмний код

В.1 Математична обробка прикладних даних
GitHub репозиторій: https://github.com/ArRuslan/apz-mobile/blob/master/app/src/main/java/com/rdev/nure/apz/components/WeatherForecastCarousel.kt.

     1	package com.rdev.nure.apz.components
     2	
     3	import androidx.compose.foundation.gestures.detectTapGestures
     4	import androidx.compose.foundation.layout.Box
     5	import androidx.compose.foundation.layout.Column
     6	import androidx.compose.foundation.layout.fillMaxWidth
     7	import androidx.compose.foundation.layout.padding
     8	import androidx.compose.material3.ExperimentalMaterial3Api
     9	import androidx.compose.material3.HorizontalDivider
    10	import androidx.compose.material3.Text
    11	import androidx.compose.material3.carousel.CarouselDefaults
    12	import androidx.compose.material3.carousel.HorizontalUncontainedCarousel
    13	import androidx.compose.material3.carousel.rememberCarouselState
    14	import androidx.compose.runtime.Composable
    15	import androidx.compose.runtime.getValue
    16	import androidx.compose.runtime.mutableStateOf
    17	import androidx.compose.runtime.remember
    18	import androidx.compose.runtime.setValue
    19	import androidx.compose.ui.Alignment
    20	import androidx.compose.ui.Modifier
    21	import androidx.compose.ui.input.pointer.pointerInput
    22	import androidx.compose.ui.layout.onSizeChanged
    23	import androidx.compose.ui.tooling.preview.Preview
    24	import androidx.compose.ui.unit.dp
    25	import androidx.compose.ui.unit.sp
    26	import com.rdev.nure.apz.ui.theme.ApzTheme
    27	import java.text.DateFormat
    28	import java.text.SimpleDateFormat
    29	import java.util.Calendar
    30	
    31	private val dateFmt: DateFormat = SimpleDateFormat.getDateInstance()
    32	
    33	@OptIn(ExperimentalMaterial3Api::class)
    34	@Composable
    35	fun WeatherForecastCarousel(vararg temps : Int?, onLongClick: (() -> Unit)? = null) {
    36	    val carouselState = rememberCarouselState { temps.size }
    37	    var size by remember { mutableStateOf(0.dp) }
    38	
    39	    Column {
    40	        Box(
    41	            modifier = Modifier
    42	                .padding(8.dp)
    43	                .fillMaxWidth()
    44	                .onSizeChanged { size = it.width.dp }
    45	                .pointerInput(Unit){
    46	                    detectTapGestures(
    47	                        onLongPress = {
    48	                            if(onLongClick != null) onLongClick()
    49	                        }
    50	                    )
    51	                }
    52	        ) {
    53	            HorizontalUncontainedCarousel(
    54	                state = carouselState,
    55	                itemWidth = size,
    56	                flingBehavior = CarouselDefaults.singleAdvanceFlingBehavior(carouselState)
    57	            ) { index ->
    58	                val forecastTemp = temps[index]?.toString() ?: "?"
    59	
    60	                Column(
    61	                    modifier = Modifier.fillMaxWidth(),
    62	                    horizontalAlignment = Alignment.CenterHorizontally
    63	                ) {
    64	                    val calendar = Calendar.getInstance()
    65	                    calendar.add(Calendar.DATE, index)
    66	
    67	                    Text(
    68	                        text = "$forecastTemp °C",
    69	                        fontSize = 28.sp,
    70	                    )
    71	                    Text(
    72	                        text = dateFmt.format(calendar.time),
    73	                        fontSize = 20.sp,
    74	                    )
    75	                    HorizontalDivider()
    76	                }
    77	            }
    78	        }
    79	    }
    80	}
    81	
    82	@Preview(showBackground = true)
    83	@Composable
    84	fun WeatherForecastCarouselPreview() {
    85	    ApzTheme {
    86	        WeatherForecastCarousel(15, 20)
    87	    }
    88	}